# Some good ideas here:
# https://codeberg.org/ADIOP55550/helix-config/src/commit/1d52ac4a15735ca7f9307e789094590786007e18/config.toml

# TODO: Figure out how to select inside of next/previous occurance of `()[]{}<>''""```
# g = { "(" = [ "find_next_char", "move_char_left" ] }

# TODO: Figure out select inside of matching indent

# TODO: Faser `miw`?

theme = "spideyclick"

[keys.normal]
# w = ["move_next_word_start", "move_prev_word_start", "move_next_word_end"]
# W = ["move_next_long_word_start", "move_prev_long_word_start", "move_next_long_word_end"]
"'" = "select_register"
"C-/" = "toggle_comments"

# Rebind away from ALT as much as possible
"D" = "delete_selection_noyank"
"C" = "change_selection_noyank"
"A-," = "keep_primary_selection"
"A-<" = "remove_primary_selection"
"A-C" = "copy_selection_on_next_line"
"C-A-c" = "copy_selection_on_prev_line"
"C-s" = "split_selection_on_newline"
"C-minus" = "merge_selections"
"C-_" = "merge_consecutive_selections"
"C-;" = "flip_selections"
"C-:" = "ensure_selections_forward"

# Cusom line manipulations
x = "extend_line_below"
X = "extend_line_above"
"C-x" = ["extend_to_line_bounds", "trim_selections"]
"C-X" = "shrink_to_line_bounds"
# Not really sure what this buys us, since regular "x" seems to do the same thing
# " "extend_to_line_bounds"

"tab" = "goto_word"
space.c = "toggle_comments"
space."." = "file_picker_in_current_buffer_directory"
C-p = "file_picker"     # Ctrl + p -> fuzzy finder
C-P = "command_palette" # Ctrl + Shift + p -> command palette
"C-F" = ":format"

# Ctrl-based line modifications
C-j = ["extend_to_line_bounds", "delete_selection", "paste_after"]
C-k = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
C-A-j = ["normal_mode", "extend_to_line_bounds", "yank", "open_below", "replace_with_yanked", "collapse_selection", "normal_mode"]
C-A-k = ["normal_mode", "extend_to_line_bounds", "yank", "open_above", "replace_with_yanked", "collapse_selection", "normal_mode"]

# Alternate key maps for tree sitter and jumping
"up" = "expand_selection"
"down" = "shrink_selection"
"left" = "select_prev_sibling"
"right" = "select_next_sibling"
"C-h" = "jump_backward"
"C-l" = "jump_forward"
"C-up" = "jump_forward"
"C-down" = "jump_backward"
"C-right" = "jump_forward"
"C-left" = "jump_backward"

# C-S-O = ["open_below", "normal_mode"]

# Scripts
"ret" = ["normal_mode", "extend_to_line_bounds", "yank", "open_below", "replace_with_yanked", ":pipe ~/dotfiles/scripts/line_base.rs", "collapse_selection", "insert_mode"]
"C-A-t" = [":insert-output bash t"]
"C-A-d" = [":insert-output bash -c 'date --iso' | tr -d '\n'"]

[keys.insert]
"A-x" = "normal_mode"
"C-space" = "completion"
"C-s" = [":write", "normal_mode"]
"C-n" = ["normal_mode", "extend_to_line_bounds", "yank", "open_below", "replace_with_yanked", ":pipe ~/dotfiles/scripts/line_base.rs", "collapse_selection", "insert_mode"]

"C-left" = ["move_prev_long_word_start", "collapse_selection"]
"C-right" = ["move_next_long_word_start", "collapse_selection"]
"A-left" = ["move_prev_word_start", "collapse_selection"]
"A-right" = ["move_next_word_start", "collapse_selection"]
"C-S-left" = ["extend_prev_long_word_start"]
"C-S-right" = ["extend_next_long_word_start"]
"A-S-left" = ["extend_prev_word_start"]
"A-S-right" = ["extend_next_word_start"]
"A-Q" = ["record_macro"]
"A-q" = ["replay_macro"]

[keys.select]
X = "extend_line_above"
"tab" = "extend_to_word"
"D" = "delete_selection_noyank"
"C-minus" = "merge_selections"
"C-_" = "merge_consecutive_selections"

[editor]
true-color = true
line-number = "relative"
mouse = false
bufferline = "multiple"
auto-save = true
shell = ["bash", "-c"]

[editor.whitespace.render]
space = "all"
tab = "all"
nbsp = "all"

[editor.indent-guides]
render = true
character = "▏" # Some characters that work well: "╎", "▏", "┆", "┊", "⸽"
skip-levels = 1

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false

[editor.auto-pairs]
# '(' = ')'
# '{' = '}'
# '[' = ']'
# '"' = '"'
# '`' = '`'
# '<' = '>'

[editor.lsp]
display-inlay-hints = true

[editor.statusline]
center = ["version-control"]
right = ["diagnostics", "selections", "position", "file-encoding", "file-line-ending", "file-type", "position-percentage"]


# Some good ideas here:
# https://codeberg.org/ADIOP55550/helix-config/src/commit/1d52ac4a15735ca7f9307e789094590786007e18/config.toml

# TODO: Figure out how to select inside of next/previous occurance of `()[]{}<>''""```
# g = { "(" = [ "find_next_char", "move_char_left" ] }

# TODO: Figure out select inside of matching indent

theme = "base16-tweaks"

[keys.normal]
# Cusom line manipulations
"tab" = "goto_word"
w = "@miw"
W = "@miW"
C-w = ":bc"
C-A-w = ":wbc"
"C-i" = "@gsP"
"C-p" = "@glp"
"C-a" = "@glp"
C-e = ["ensure_selections_forward", "select_mode", "goto_line_end", "normal_mode"]
C-m = "@mim_"
# C-A-m = "@mip"
space.c = "toggle_comments"
"'" = "select_register"
"C-/" = "toggle_comments"
"e" = ["move_next_word_end", "trim_selections"]
"E" = ["move_next_long_word_end", "trim_selections"]
"b" = ["move_prev_word_start", "trim_selections"]
"B" = ["move_prev_long_word_start", "trim_selections"]
"M" = ["select_textobject_inner"]
"G" = "@ge"
x = "extend_line_below"
X = "extend_line_above"
"C-A-x" = "@gsvgl"
"C-A-X" = "shrink_to_line_bounds"
# Not really sure what this buys us, since regular "x" seems to do the same thing
# " "extend_to_line_bounds"

# Rebind away from ALT as much as possible
"D" = "delete_selection_noyank"
"C" = "change_selection_noyank"
"A-," = "remove_primary_selection"
"A-C" = "copy_selection_on_next_line"
"C-A-c" = "copy_selection_on_prev_line"
"C-s" = "split_selection_on_newline"
"C-minus" = "merge_selections"
"C-_" = "merge_consecutive_selections"
"C-;" = "flip_selections"
"C-:" = "ensure_selections_forward"

# Ctrl-based line modifications
C-j = ["extend_to_line_bounds", "delete_selection", "paste_after"]
C-k = ["extend_to_line_bounds", "delete_selection", "move_line_up", "paste_before"]
C-A-j = ["normal_mode", "extend_to_line_bounds", "yank", "open_below", "replace_with_yanked", "collapse_selection", "normal_mode"]
C-A-k = ["normal_mode", "extend_to_line_bounds", "yank", "open_above", "replace_with_yanked", "collapse_selection", "normal_mode"]

# Alternate key maps for tree sitter and jumping
"up" = "expand_selection"
"down" = "shrink_selection"
"left" = "select_prev_sibling"
"right" = "select_next_sibling"
"C-h" = "jump_backward"
"C-l" = "jump_forward"
"C-up" = "increment"
"C-down" = "decrement"
"C-right" = "jump_forward"
"C-left" = "jump_backward"

# Other Shortcuts
"C-q" = ":write-quit-all!"
"C-A-q" = ":quit-all!"
space."." = "file_picker_in_current_buffer_directory"
"C-f" = ":format"

# Scripts
# "ret" = ["normal_mode", "extend_to_line_bounds", "yank", "open_below", "replace_with_yanked", ":pipe ~/dotfiles/scripts/line_base.rs", "collapse_selection", "insert_mode"]
"C-A-t" = [":insert-output bash t"]
"C-A-d" = [":insert-output bash -c 'date --iso' | tr -d '\n'"]
C-x = ":sh zellij run -c -f -x 10% -y 10% --width 80% --height 80% -- yazi"
C-o = ":sh zellij run -c -f -x 10% -y 10% --width 80% --height 80% -- bash ~/.config/helix/scripts/yazi-picker.sh open" # From https://yazi-rs.github.io/docs/tips
C-t = ":sh zellij run -c -f -x 10% -y 10% --width 80% --height 80% -- bash"
C-T = ":sh zellij run -c -f -x 10% -y 10% --width 80% --height 80% -- nu"
C-g = ":sh zellij run -c -f -x 10% -y 10% --width 80% --height 80% -- lazygit"
C-G = [":new", ":insert-output bash -c lazygit", ":buffer-close!", ":redraw", ":reload-all"]

space."w" = ":set-option soft-wrap.enable true"

[keys.normal.space.',']
c = ":pipe sttr camel"
s = ":pipe sttr slug"
t = ":pipe sttr title"

[keys.normal.space.t]
t = ["extend_to_line_bounds", "trim_selections", ":pipe line_status üìÉ", "goto_first_nonwhitespace"]
i = ["extend_to_line_bounds", "trim_selections", ":pipe line_status üöß", "goto_first_nonwhitespace"]
d = ["extend_to_line_bounds", "trim_selections", ":pipe line_status ‚úÖ", "goto_first_nonwhitespace"]
b = ["extend_to_line_bounds", "trim_selections", ":pipe line_status ‚õî", "goto_first_nonwhitespace"]
c = ["extend_to_line_bounds", "trim_selections", ":pipe line_status ‚ùå", "goto_first_nonwhitespace"]
r = ["extend_to_line_bounds", "trim_selections", ":pipe line_status üîé", "goto_first_nonwhitespace"]
s = ["extend_to_line_bounds", "trim_selections", ":pipe line_status ‚è≠Ô∏è", "goto_first_nonwhitespace"]
w = ["extend_to_line_bounds", "trim_selections", ":pipe line_status üïó", "goto_first_nonwhitespace"]

[keys.insert]
"C-q" = ":write-quit-all!"
"C-A-q" = ":quit-all!"
"A-x" = "normal_mode"
"C-space" = "completion"
"C-s" = [":write", "normal_mode"]
"C-o" = [":write-all", ":quit"]
"C-n" = ["normal_mode", "extend_to_line_bounds", "yank", "open_below", "replace_with_yanked", ":pipe ~/dotfiles/scripts/line_base.rs", "collapse_selection", "insert_mode"]
"C-p" = "paste_before"

"C-left" = ["move_prev_long_word_start", "collapse_selection"]
"C-right" = ["move_next_long_word_start", "collapse_selection"]
"A-left" = ["move_prev_word_start", "collapse_selection"]
"A-right" = ["move_next_word_start", "collapse_selection"]
"C-S-left" = ["extend_prev_long_word_start"]
"C-S-right" = ["extend_next_long_word_start"]
"A-S-left" = ["extend_prev_word_start"]
"A-S-right" = ["extend_next_word_start"]
"A-Q" = ["record_macro"]
"A-q" = ["replay_macro"]

"C-t" = [":insert-output date +'%_I:%_M' | awk '{$1=$1};1'", "append_mode"]
"C-d" = [":insert-output date -I | awk '{$1=$1};1'", "append_mode"]

[keys.select]
"C-q" = ":write-quit-all!"
"C-A-q" = ":quit-all!"
X = "extend_line_above"
"tab" = "extend_to_word"
"D" = "delete_selection_noyank"
"C-minus" = "merge_selections"
"C-_" = "merge_consecutive_selections"

[editor]
# gutters = ["diagnostics", "spacer", "line-numbers", "spacer", "diff"]
auto-save = true
bufferline = "never"
completion-replace = false
cursorcolumn = false
cursorline = false
gutters = ["diagnostics", "diff"]
jump-label-alphabet = "fdsajkl;ghweruiopcvm,tybnqxz"
line-number = "relative"
mouse = false
popup-border = "all"
preview-completion-insert = false
shell = ["bash", "-c"]
true-color = true
undercurl = true
# Minimum severity to show a diagnostic after the end of a line:
end-of-line-diagnostics = "hint"

[editor.whitespace.render]
space = "all"
tab = "all"
nbsp = "all"

[editor.indent-guides]
render = true
character = "‚ñè" # Some characters that work well: "‚ïé", "‚ñè", "‚îÜ", "‚îä", "‚∏Ω"
skip-levels = 1

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false

[editor.auto-pairs]
# '(' = ')'
# '{' = '}'
# '[' = ']'
# '"' = '"'
# '`' = '`'
# '<' = '>'

[editor.lsp]
display-inlay-hints = true

[editor.statusline]
left = [
  "file-name",
  "version-control",
]
center = []
right = [
  "spinner",
  "separator",
  "diagnostics",
  "position-percentage",
  "position",
  "selections",
  "file-type",
  "file-encoding",
  "file-line-ending",
  "mode",
]
separator = "|"
mode.normal = "üî®"
mode.insert = "üìù"
mode.select = "üß≤"

[editor.soft-wrap]
wrap-at-text-width = false
wrap-indicator = "‚Ü™\t"

[editor.inline-diagnostics]
# Minimum severity to show a diagnostic on the primary cursor's line.
# Note that `cursor-line` diagnostics are hidden in insert mode.
cursor-line = "hint"
# Minimum severity to show a diagnostic on other lines:
other-lines = "disable"
